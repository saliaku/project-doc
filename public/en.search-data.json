{"/about/":{"data":{"about-the-project#About the project":"","for-parents#For Parents":"About the projectPurpose This assessment aims to collect data on learners’ readability levels, information processing abilities, and working memory capacity. The information gathered will be used solely to train a model supporting an adaptive E-learning framework, which will leverage Genetic Algorithms (GA) to tailor educational resources to meet each learner’s unique needs, enhancing engagement and learning effectiveness. Your responses are confidential, will not be shared, and will not be used for any other purposes.\nFramework Overview In a world where traditional education systems struggle to cater to the diverse needs of neurodiverse students, our project seeks to create an innovative e-learning framework that prioritizes inclusivity, adaptability, and personalization. By harnessing the power of Machine Learning (ML), this framework aims to provide a dynamic, tailored educational experience for students with varying cognitive abilities and learning styles.\nThe framework is proposed to be built around three core components: user profiling, instructional content delivery, and personalized learning paths.\nUser Profiling: Involves creating detailed personal profiles for students, assessing their cognitive abilities, learning preferences, and individual strengths. This profile acts as the foundation for designing tailored learning experiences.\nInstructional Content Delivery: Content is presented in multimodal formats, including text, video, interactive media, and gamified elements, to address the varied sensory and cognitive needs of students.\nPersonalized Learning Paths: Learning paths are dynamically generated using Genetic Algorithms (GA), ensuring optimal sequencing of lessons while adhering to dependency relationships between topics using a technique called Layered Topological Sort (LTS).\nThrough this project, we hope to go beyond traditional education by empowering neurodiverse learners, providing them with the tools they need to succeed in a supportive and inclusive environment. By leveraging ML technologies, the framework ensures that every student receives a customized and engaging learning experience, regardless of geographical limitations or individual challenges.\nOur Motivation Our motivation stems from the growing need to create an inclusive educational environment where every student, regardless of their cognitive or learning abilities, can thrive. Traditional education systems often overlook the diverse needs of neurodiverse students, leaving them to navigate an inflexible and overwhelming framework that may not cater to their unique strengths and challenges.\nFor instance, students with conditions like ADHD, dyslexia, or autism spectrum disorder often face difficulties in focus, comprehension, and sensory processing. These challenges are exacerbated in environments that fail to offer tailored support, leading to feelings of frustration and disengagement. Our project seeks to address these gaps by providing a solution that not only meets the needs of neurodiverse students but also sets a new standard for adaptive learning.\nBeyond addressing individual challenges, this project is motivated by the potential to provide equal opportunities for students in remote and underserved areas. E-learning frameworks eliminate geographical barriers, ensuring that high-quality, customized education is accessible to all. This inclusivity is not just an option but a necessity in today’s interconnected world.\nHow This Can Be Beneficial Our e-learning framework directly addresses the challenges faced by neurodiverse students, offering a wide array of benefits that redefine the educational experience for these learners. Traditional systems often overlook the unique needs of individuals with ADHD, dyslexia, or other neurodiverse traits, leading to disengagement and frustration. Our framework seeks to change that narrative.\nKey Benefits: Personalized Learning Paths: By leveraging advanced Genetic Algorithms (GA), students are provided with optimal and customized learning paths that align with their individual profiles. This ensures that the learning process is not only effective but also enjoyable and engaging.\nMultimodal Content Delivery: Students receive instructional materials in formats best suited to their learning styles, whether it be visual, auditory, or interactive content. This variety ensures higher engagement and better retention of concepts.\nAccessibility for Remote Areas: The framework eliminates geographical barriers, providing high-quality education to students in remote areas without the need for physical presence or extensive resources like personal tutors.\nReal-Time Feedback and Adaptive Learning: Through ML, the system monitors student progress and provides real-time feedback, adapting learning paths based on their performance and engagement levels. This ensures continuous improvement and a more interactive experience.\nBy focusing on inclusivity, adaptability, and accessibility, our project transforms the way education is delivered to neurodiverse students, empowering them to overcome traditional learning challenges and unlock their full potential. The project currently focusses on personalization, with extension to including neurodiverse students a future scope.\nFor Parents As parents, you play a pivotal role in shaping your child’s educational journey. Our framework is designed to empower you with actionable insights and tools to support your child’s unique learning needs. Recognizing the challenges faced by neurodiverse learners, we aim to bridge the gap between educational expectations and individual capabilities, fostering an environment of growth and achievement. This project is a small step is personalizing the learning experience for the students, bringing it one step closer to including neurodiverse students.\nThe platform provides a detailed overview of your child’s learning preferences, progress, and areas of improvement through personalized reports and dashboards. These insights are generated using advanced Machine Learning (ML) algorithms that analyze patterns in learning behavior, cognitive abilities, and performance metrics. By understanding how your child learns best, you can better support their academic and personal growth.\nOur framework emphasizes flexibility and adaptability, offering recommendations tailored to your child’s strengths and challenges. Whether it’s suggesting multimodal content like videos, interactive activities, or gamified lessons, the system ensures that your child remains engaged and motivated throughout their learning journey.\nUltimately, our framework is not just about enhancing learning outcomes; it’s about creating a collaborative ecosystem where parents and educators work together to unlock each child’s potential. With this platform, you have a partner in your child’s education, ensuring that they receive the support they need to thrive in an inclusive, personalized, and empowering learning environment.","framework-overview#Framework Overview":"","how-this-can-be-beneficial#How This Can Be Beneficial":"","our-motivation#Our Motivation":"","purpose#Purpose":""},"title":"_index"},"/docs/":{"data":{"implementation#Implementation":"ImplementationTo support the implementation, the following sections offer a step-by-step guide for setting up the Moodle system according to the prototype’s specifications. From outlining the necessary system requirements to detailing the installation process and codebase integration, this documentation provides all the information needed to replicate the setup. Begin with the Getting Started section to review the prerequisites, then proceed to the Installation Guide for full configuration instructions."},"title":"_index"},"/docs/course-setup/":{"data":{"":"Add the steps for setting up course here."},"title":"Setting up the course"},"/docs/databases/":{"data":{"":"","fyp#fyp":"This section details the database tables used in the project. There are two databases:\nmoodle: Default database created by moodle to store moodle data fyp: Database created to store required information of the implementation moodle ℹ️ Note: moodle tables have many built-in fields. The schema of only the required section of tables is provided. Table: mdl_user Field Data Type Description id INT (AUTO INCREMENT) Auto increment identifier flesch INT Flesch-Kincaid score ipv FLOAT Information processing score for visual content ipa FLOAT Information processing score for auditory content ipt FLOAT Information processing score for textual content wmv FLOAT Working memory score for visual content wma FLOAT Working memory score for auditory content wmt FLOAT Working memory score for textual content attempt SMALL INT Indicates whether mdl_poll_user.py has generated a path for the user Table: mdl_questions Field Data Type Description id INT (AUTO INCREMENT) Auto increment identifier questiontext TEXT Text of the question generalfeedback TEXT Feedback to be given with solution qtype TEXT Indicates question type – multichoice / truefalse Table: mdl_question_answers Field Data Type Description id INT (AUTO INCREMENT) Auto increment identifier question INT Foreign key – ID in mdl_questions answer TEXT Choices for the question fraction FLOAT Score of the choice Table: mdl_question_versions Field Data Type Description id INT (AUTO INCREMENT) Auto increment identifier questionbankentryid INT Foreign key – ID in mdl_question_bank_entries questionid INT Foreign key – ID in mdl_questions Table: mdl_question_bank_entries Field Data Type Description id INT (AUTO INCREMENT) Auto increment identifier questioncategoryid INT Category of the question in the question bank fyp Table: topics Field Data Type Description id INT (AUTO INCREMENT) Auto increment identifier topic_name VARCHAR Name of the topic difficulty FLOAT Difficulty value of the topic num_questions INT Number of quiz questions to be given for topic Table: lo Field Data Type Description id INT (AUTO INCREMENT) Auto increment identifier topic INT Foreign key – ID in topics v FLOAT Visual score a FLOAT Auditory score t FLOAT Textual score ip FLOAT Information processing score read_metric FLOAT Readability score path TEXT Path to the resource in the server Table: clusters Field Data Type Description id INT (AUTO INCREMENT) Auto increment identifier centroid LONG TEXT Centroid of the cluster as an array gene_pool LONG TEXT Gene pool of the cluster as JSON Table: students Field Data Type Description user_id INT Foreign key – ID in mdl_user path LONG TEXT Current learning pathway of the student cluster_id INT Foreign key – ID of clusters difficulty LONG TEXT Difficulty values topic-wise as JSON gene_space LONG TEXT Gene space of the student as JSON explored_genes LONG TEXT Genes explored by GA in ascending order of cost, arranged topic-wise learning_costs LONG TEXT Genes and their learning costs for the student as JSON completed LONG TEXT Topics completed by the student as an array stored_path LONG TEXT Initial learning path generated for the student Table: quiz_attempts Field Data Type Description student_id INT Foreign key – ID in mdl_user topic_id INT Foreign key – ID in topics attempts INT Quiz attempts of the user on the given topic scores LONG TEXT Scores obtained by the student in quiz attempts (JSON) ","moodle#moodle":""},"title":"Databases"},"/docs/file-system/":{"data":{"":"","#":"The following files manage the complete process of generating the personalized learning path and delivering it to the student. These are encapsulated within the learningpath folder, which contains a custom Moodle plugin developed to provide the necessary functionalities.\nTable: Files File name Path/folder Input Function GA_functions.py moodle/local/learningpath None Contains all GA-related and database access functions script.py moodle/local/learningpath User id Generates a personalized learning path for the given user and stores the values in table students mdl_poll_user.py moodle/local/learningpath None Triggers script.py when profile scores are updated in mdl_user Quizupdate.py moodle/local/learningpath User id, topic id, score Modifies the learning path after a quiz is completed and stores the updated path in students scoring.py moodle/local/learningpath User id, topic id, score Updates the quiz scores in table quiz_attempts view.php moodle/local/learningpath Moodle user login Displays course content to the student get_next_lo.py moodle/local/learningpath User id Fetches the next LO for the user from table students quiz.php moodle/local/learningpath Moodle session data Displays quiz for the previously taught topic quiz_submit.php moodle/local/learningpath Moodle session data Calculates quiz score and displays solutions get_quiz_questions.py moodle/local/learningpath Topic id Fetches topic-wise questions from mdl_question, mdl_question_versions, and mdl_question_bank_entries dashboard.php moodle/local/learningpath Moodle user login Displays graphical learning style score distribution get_dashboard_data.py moodle/local/learningpath User id Fetches user learning style scores for the dashboard progress.php moodle/local/learningpath Moodle user login Displays progress using quiz attempts and scores get_progress_data.py moodle/local/learningpath User id Fetches data about quiz attempts and scores "},"title":"File System"},"/docs/getting-started/":{"data":{"for-a-more-detailed-guide#For a More Detailed Guide":"Setting up the ServerThis guide will walk you through the steps to install and set up a Moodle server on a Linux-based system (Ubuntu). Moodle is a popular open-source learning management system (LMS) that is widely used for online learning environments.\nPrerequisites Before starting the moodle installation, ensure you have the following:\nA Linux server (Ubuntu is used in this guide). A user account with root privileges. Basic knowledge of the terminal and SSH (if you’re installing remotely). A working LAMP stack (Linux, Apache, MySQL, PHP). If you don’t have LAMP installed, follow the below steps first.\nMoodle Hardware Requirements The hardware requirements for Moodle can vary based on the number of users and the type of content. The following are general recommendations for a Moodle server:\nMinimum Hardware Requirements Disk Space:\n200MB for the Moodle code, plus as much as you need to store content. 5GB is probably a realistic minimum. Processor:\n1 GHz (min), 2 GHz dual-core or more is recommended. Memory:\n512MB (min), 1GB or more is recommended. For large production servers, 8GB plus may be required. Setting Up 1. Update your system: sudo apt update \u0026\u0026 sudo apt upgrade -y 2. Install Apache sudo apt install apache2 3. Install MySQL sudo apt install mysql-server 4. Install PHP and required extensions sudo apt install php php-mysqli php-xmlrpc php-soap php-intl php-mbstring php-xml php-zip php-curl php-gd 5.Install additional dependencies: sudo apt install libjpeg-dev libpng-dev libfreetype6-dev 6. Restart Apache to apply the changes: sudo systemctl restart apache2 For a More Detailed Guide For more detailed information on Moodle’s installation requirements, please refer to the official Moodle Installation Requirements.","moodle-hardware-requirements#Moodle Hardware Requirements":"","prerequisites#Prerequisites":"","setting-up#Setting Up":"","setting-up-the-server#Setting up the Server":""},"title":"Getting Started"},"/docs/moodle-installation-guide/":{"data":{"":"With all Moodle prerequisites in place, we can now proceed with the installation. The upcoming steps outline the complete installation process."},"title":"Moodle Installation Guide"},"/docs/moodle-installation-guide/create-an-empty-database/":{"data":{"":"Next, create a new, empty database for your installation. You need to find and make a note of the following information for use during the final installation stage:\ndbhost - the database server hostname. Probably localhost if the database and web server are the same machine, otherwise the name of the database server. dbname - the database name. Whatever you called it, e.g., moodle. dbuser - the username for the database. Whatever you assigned, e.g., moodleuser. Do not use the root/superuser account. Create a proper account with the minimum permissions needed. dbpass - the password for the above user. "},"title":"Create an Empty Database"},"/docs/moodle-installation-guide/detailed-guide/":{"data":{"detailed-guide-on-installing-moodle#Detailed Guide on Installing Moodle":"Detailed Guide on Installing MoodleFor a comprehensive and detailed guide on how to install Moodle, including system requirements, setup instructions, and troubleshooting, please refer to the official Moodle documentation given:\nInstalling Moodle - Moodle Documentation"},"title":"Detailed Guide"},"/docs/moodle-installation-guide/downloading-moodle/":{"data":{"":"","#":"Download and Copy Files into Place You have two options for downloading Moodle:\nPull the Code from the Git Repository\nFor this project, Moodle was downloaded via GitHub. This method is recommended for developers as it simplifies the upgrade process and version control. To pull the Moodle code, run the following command:\ngit clone -b MOODLE_405_STABLE git://git.moodle.org/moodle.git ℹ️ Tip: If you are downloading Moodle to your local computer and then uploading it to your hosted web site, it is usually better to upload the compressed Moodle file and then decompress on your hosted web site. If you decompress Moodle on your local computer, because Moodle is comprised of over 25,000 files, trying to upload over 25,000 files using an FTP client or your host’s “file manager” can sometimes miss a file and cause errors. Download the required version from official website You can download your required version from http://moodle.org/downloads and unzip the folder. Secure the Moodle Files It is vital that the files are not writeable by the web server user. For example, on Unix/Linux (as root):\nchown -R root /path/to/moodle chmod -R 0755 /path/to/moodle "},"title":"Downloading moodle"},"/docs/moodle-installation-guide/installing-moodle/":{"data":{"command-line-installer#Command Line Installer":"","example-of-using-the-command-line-as-root#Example of Using the Command Line (as root)":"Command Line InstallerIt’s recommended to run the command line as your system’s web user. You will need to know what the web user is for your system. For example:\nUbuntu/Debian: www-data CentOS: apache Example of Using the Command Line (as root) Substitute www-data with your system’s web user. Follow these steps:\n# Change the ownership of the Moodle directory to the web user chown www-data /path/to/moodle # Navigate to the Moodle CLI directory cd /path/to/moodle/admin/cli # Run the installation script using the web user sudo -u www-data /usr/bin/php install.php # Change the ownership back to root for security chown -R root /path/to/moodle "},"title":"Installing moodle"},"/docs/moodle-installation-guide/moodledata/":{"data":{"create-the-moodledata-directory#Create the \u003ccode\u003emoodledata\u003c/code\u003e Directory":"","example-unixlinux#Example (Unix/Linux)":"Create the moodledata DirectoryMoodle requires a directory to store all of its files, including uploaded files, temporary data, cache, session data, and more. The web server needs to have write access to this directory. When allocating space for this directory, especially on larger systems, consider how much free space you’ll need.\n⚠️ This directory must not be accessible directly via the web. Allowing web access would create a serious security risk. Do not place it inside your web root or inside the Moodle program files directory. Moodle will not install if this condition is not met. It can be placed anywhere convenient outside of the web root and Moodle program files directory. Example (Unix/Linux) To create the moodledata directory and set the correct permissions for the web server user, follow these steps:\n# Create the moodledata directory mkdir /path/to/moodledata # Set the permissions so anyone on the server can write to the directory chmod 0777 /path/to/moodledata "},"title":"MoodleData"},"/docs/user-profiling-website/":{"data":{"":"Add website details here.\nsection-wise specifications scoring specifications for each section "},"title":"Use Profiling Website Specifications"}}